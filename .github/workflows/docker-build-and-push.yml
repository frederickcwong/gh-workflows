# build single docker image with multiple tags
#
# secrets input
# - username         docker login username
# - password         docker login token (under docker repo security setting)
#
# inputs
# - ref              the commit sha
# - org              docker repo org name
# - image            docker repo image name
# - platforms        what platforms to build? comma-separated list
# - base-tag         tag to be used with docker image
# - need-latest      add "latest" tag?
# - need-build-date  add build date to tag? e.g. "<base-tag>-YYYY-MM-DD"
# - build-date-tz    use TZ to determinte the build date

# Notes
# - ref: the commit ID/SHA will be used for checkout the repo
#        the build will be based on the commit (not a branch)
#        because the current HEAD of the branch may be ahead
#        of the commit for the build.
#        It is default to "main" because action/checkout@v4
#        accepts branch name as well, which will checkout
#        the latest commit from the "main" branch

# xxx: need build args
# xxx: build context? what if dockerfile is not at root directory?
name: Docker Build & Push
on:
  workflow_call:
    secrets:
      username:
        required: true
      password:
        required: true
    inputs:
      ref:
        type: string
        default: "main"
      org:
        type: string
        default: frederickwong
      image:
        type: string
        default: sandbox
      platforms:
        type: string
        default: linux/amd64,linux/arm64
      base-tag:
        type: string
        default: "default"
      build-args:
        type: string
      labels:
        type: string
      need-latest:
        type: boolean
        default: false
      need-build-date:
        type: boolean
        default: false
      build-date-tz:
        type: string
        default: America/Los_Angeles

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Get the build date
      - id: get-date
        name: Get Build Date
        env:
          TZ: ${{ inputs.build-date-tz }}
        run: echo "result=`date +'%Y-%m-%d'`" >> "$GITHUB_OUTPUT"

      # Generate the build tags for the docker image
      - id: docker-meta
        name: Build Docker Meta Data
        uses: docker/metadata-action@v4
        with:
          images: ${{ inputs.org }}/${{ inputs.image }}
          labels: ${{inputs.labels}}
          tags: |
            type=raw,enable=${{inputs.need-build-date}},value=${{inputs.base-tag}}-${{steps.get-date.outputs.result}}
            type=raw,enable=${{!inputs.need-build-date}},value=${{inputs.base-tag}}
            type=raw,enable=${{inputs.need-latest}},value=latest

      # Docker Build Setup - Step 1
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2

      # Docker Build Setup - Step 2
      - name: Setup Buildx
        uses: docker/setup-buildx-action@v2

      # Docker Build Setup - Step 3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.username }}
          password: ${{ secrets.password }}

      # Checkout Repo
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      # Start the build and push to Docker
      - name: Build and Push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          pull: true # pull the reference image
          no-cache: true # do not use cache
          platforms: ${{ inputs.platforms }}
          build-args: ${{ inputs.build-args }}
          tags: ${{ steps.docker-meta.outputs.tags }}
          labels: ${{ steps.docker-meta.outputs.labels }}